!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("ethers"),require("crypto")):"function"==typeof define&&define.amd?define(["exports","ethers","crypto"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).ethersOpt={},e.ethers)}(this,function(e,t){"use strict";const n={},a={1:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",11155111:"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",8453:"0xB94704422c2a1E396835A571837Aa5AE53285a95",84532:"0x1493b2567056c2181630115660963E13A8E32735"},r={1:"0xce01f8eee7E479C928F8919abD53E553a36CeF67",11155111:"0xce01f8eee7E479C928F8919abD53E553a36CeF67"},i={...r,8453:"0xC6d566A56A1aFf6508b41f6c90ff131615583BCD",84532:"0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA"},s={8453:".80002105.reverse",84532:".80002105.reverse"},o=new Set(["0xce01f8eee7E479C928F8919abD53E553a36CeF67","0xC6d566A56A1aFf6508b41f6c90ff131615583BCD","0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA"]);class p extends t.EnsResolver{async supportsWildcard(){return!!o.has(this.address)||super.supportsWildcard()}static async getEnsAddress(e){const t=await e.getNetwork(),n=Number(t.chainId),r=t.getPlugin("org.ethers.plugins.network.Ens"),i=a[n]||r?.address;if(!i)throw new Error(`Network ${n} doesn't have ENS registry address specified`);return i}static async#e(e,n,a){const r=Number((await e.getNetwork()).chainId);if(i[r])return i[r];const s=await p.getEnsAddress(e);try{const r=new t.Contract(s,["function resolver(bytes32) view returns (address)"],e),i=await r.resolver(a||t.namehash(n||""),{enableCcipRead:!0});return i===t.ZeroAddress?null:i}catch(e){throw e}}static async fromName(e,t){let n=t;for(;;){if(""===n||"."===n)return null;if("eth"!==t&&"eth"===n)return null;const a=await p.#e(e,n);if(null!=a){const r=new p(e,a,t);return n===t||await r.supportsWildcard()?r:null}n=n.split(".").slice(1).join(".")}}static async lookupAddress(e,n,a=!0){try{n=t.getAddress(n);const i=Number((await e.getNetwork()).chainId),o=n.substring(2).toLowerCase()+(s[i]||".addr.reverse"),u=t.namehash(o),y=await p.#e(e,"",u);if(null==y||y===t.ZeroAddress)return null;const l=new t.Contract(y,["function reverse(bytes) view returns (string memory, address, address, address)","function name(bytes32) view returns (string)"],e);if(r[i]){const e=t.dnsEncode(o),[a,r]=await l.reverse(e);return a&&r===n?a:null}const c=await l.name(u);if(!c)return null;if(a){if(await e.resolveName(c)!==n)return null}return c}catch(e){if(t.isError(e,"BAD_DATA")&&"0x"===e.value)return null;if(t.isError(e,"CALL_EXCEPTION"))return null;throw e}}async getAddress(e){try{return await super.getAddress(e)}catch(e){if(t.isError(e,"BAD_DATA")&&"0x"===e.value)return null;throw e}}async getText(e){try{return await super.getText(e)}catch(e){if(t.isError(e,"BAD_DATA")&&"0x"===e.value)return null;throw e}}async getContentHash(){try{return await super.getContentHash()}catch(e){if(t.isError(e,"BAD_DATA")&&"0x"===e.value)return null;throw e}}async getAvatar(){try{return await super.getAvatar()}catch(e){if(t.isError(e,"BAD_DATA")&&"0x"===e.value)return null;throw e}}}const u=[{inputs:[{internalType:"address",name:"emitter",type:"address"}],name:"FailedContractCreation",type:"error"},{inputs:[{internalType:"address",name:"emitter",type:"address"},{internalType:"bytes",name:"revertData",type:"bytes"}],name:"FailedContractInitialisation",type:"error"},{inputs:[{internalType:"address",name:"emitter",type:"address"},{internalType:"bytes",name:"revertData",type:"bytes"}],name:"FailedEtherTransfer",type:"error"},{inputs:[{internalType:"address",name:"emitter",type:"address"}],name:"InvalidNonceValue",type:"error"},{inputs:[{internalType:"address",name:"emitter",type:"address"}],name:"InvalidSalt",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newContract",type:"address"},{indexed:!0,internalType:"bytes32",name:"salt",type:"bytes32"}],name:"ContractCreation",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newContract",type:"address"}],name:"ContractCreation",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newContract",type:"address"},{indexed:!0,internalType:"bytes32",name:"salt",type:"bytes32"}],name:"Create3ProxyContractCreation",type:"event"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes32",name:"initCodeHash",type:"bytes32"}],name:"computeCreate2Address",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes32",name:"initCodeHash",type:"bytes32"},{internalType:"address",name:"deployer",type:"address"}],name:"computeCreate2Address",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"address",name:"deployer",type:"address"}],name:"computeCreate3Address",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"computeCreate3Address",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"nonce",type:"uint256"}],name:"computeCreateAddress",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"deployer",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"}],name:"computeCreateAddress",outputs:[{internalType:"address",name:"computedAddress",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate2",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate2",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreate2AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreate2AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreate2AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreate2AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"deployCreate2Clone",outputs:[{internalType:"address",name:"proxy",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"deployCreate2Clone",outputs:[{internalType:"address",name:"proxy",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate3",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"}],name:"deployCreate3",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreate3AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreate3AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"salt",type:"bytes32"},{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreate3AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreate3AndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"}],name:"deployCreateAndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes",name:"initCode",type:"bytes"},{internalType:"bytes",name:"data",type:"bytes"},{components:[{internalType:"uint256",name:"constructorAmount",type:"uint256"},{internalType:"uint256",name:"initCallAmount",type:"uint256"}],internalType:"struct CreateX.Values",name:"values",type:"tuple"},{internalType:"address",name:"refundAddress",type:"address"}],name:"deployCreateAndInit",outputs:[{internalType:"address",name:"newContract",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"implementation",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"deployCreateClone",outputs:[{internalType:"address",name:"proxy",type:"address"}],stateMutability:"payable",type:"function"}];class y{static abi=u;static createInterface(){return new t.Interface(u)}static connect(e,n){return new t.Contract(e,u,n)}}const l=[{inputs:[],name:"aggregator",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"description",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint80",name:"_roundId",type:"uint80"}],name:"getRoundData",outputs:[{internalType:"uint80",name:"roundId",type:"uint80"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"startedAt",type:"uint256"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint80",name:"answeredInRound",type:"uint80"}],stateMutability:"view",type:"function"},{inputs:[],name:"latestRoundData",outputs:[{internalType:"uint80",name:"roundId",type:"uint80"},{internalType:"int256",name:"answer",type:"int256"},{internalType:"uint256",name:"startedAt",type:"uint256"},{internalType:"uint256",name:"updatedAt",type:"uint256"},{internalType:"uint80",name:"answeredInRound",type:"uint80"}],stateMutability:"view",type:"function"},{inputs:[],name:"latestAnswer",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"latestRound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];class c{static abi=l;static createInterface(){return new t.Interface(l)}static connect(e,n){return new t.Contract(e,l,n)}}const d=[{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class m{static abi=d;static createInterface(){return new t.Interface(d)}static connect(e,n){return new t.Contract(e,d,n)}}const T=[{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes[]",name:"returnData",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3[]",name:"calls",type:"tuple[]"}],name:"aggregate3",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bool",name:"allowFailure",type:"bool"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call3Value[]",name:"calls",type:"tuple[]"}],name:"aggregate3Value",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"blockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[],name:"getBasefee",outputs:[{internalType:"uint256",name:"basefee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBlockNumber",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getChainId",outputs:[{internalType:"uint256",name:"chainid",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockCoinbase",outputs:[{internalType:"address",name:"coinbase",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockDifficulty",outputs:[{internalType:"uint256",name:"difficulty",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockGasLimit",outputs:[{internalType:"uint256",name:"gaslimit",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCurrentBlockTimestamp",outputs:[{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"addr",type:"address"}],name:"getEthBalance",outputs:[{internalType:"uint256",name:"balance",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastBlockHash",outputs:[{internalType:"bytes32",name:"blockHash",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryAggregate",outputs:[{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"requireSuccess",type:"bool"},{components:[{internalType:"address",name:"target",type:"address"},{internalType:"bytes",name:"callData",type:"bytes"}],internalType:"struct Multicall3.Call[]",name:"calls",type:"tuple[]"}],name:"tryBlockAndAggregate",outputs:[{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"bytes32",name:"blockHash",type:"bytes32"},{components:[{internalType:"bool",name:"success",type:"bool"},{internalType:"bytes",name:"returnData",type:"bytes"}],internalType:"struct Multicall3.Result[]",name:"returnData",type:"tuple[]"}],stateMutability:"payable",type:"function"}];class b{static abi=T;static createInterface(){return new t.Interface(T)}static connect(e,n){return new t.Contract(e,T,n)}}const h=[{inputs:[{internalType:"contract MultiWrapper",name:"_multiWrapper",type:"address"},{internalType:"contract IOracle[]",name:"existingOracles",type:"address[]"},{internalType:"enum OffchainOracle.OracleType[]",name:"oracleTypes",type:"uint8[]"},{internalType:"contract IERC20[]",name:"existingConnectors",type:"address[]"},{internalType:"contract IERC20",name:"wBase",type:"address"},{internalType:"address",name:"owner_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"ArraysLengthMismatch",type:"error"},{inputs:[],name:"ConnectorAlreadyAdded",type:"error"},{inputs:[],name:"InvalidOracleTokenKind",type:"error"},{inputs:[],name:"MathOverflowedMulDiv",type:"error"},{inputs:[],name:"OracleAlreadyAdded",type:"error"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"OwnableInvalidOwner",type:"error"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"OwnableUnauthorizedAccount",type:"error"},{inputs:[],name:"SameTokens",type:"error"},{inputs:[],name:"TooBigThreshold",type:"error"},{inputs:[],name:"UnknownConnector",type:"error"},{inputs:[],name:"UnknownOracle",type:"error"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IERC20",name:"connector",type:"address"}],name:"ConnectorAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IERC20",name:"connector",type:"address"}],name:"ConnectorRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract MultiWrapper",name:"multiWrapper",type:"address"}],name:"MultiWrapperUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IOracle",name:"oracle",type:"address"},{indexed:!1,internalType:"enum OffchainOracle.OracleType",name:"oracleType",type:"uint8"}],name:"OracleAdded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"contract IOracle",name:"oracle",type:"address"},{indexed:!1,internalType:"enum OffchainOracle.OracleType",name:"oracleType",type:"uint8"}],name:"OracleRemoved",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[{internalType:"contract IERC20",name:"connector",type:"address"}],name:"addConnector",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IOracle",name:"oracle",type:"address"},{internalType:"enum OffchainOracle.OracleType",name:"oracleKind",type:"uint8"}],name:"addOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"connectors",outputs:[{internalType:"contract IERC20[]",name:"allConnectors",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"bool",name:"useWrappers",type:"bool"}],name:"getRate",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"bool",name:"useSrcWrappers",type:"bool"}],name:"getRateToEth",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"bool",name:"useSrcWrappers",type:"bool"},{internalType:"contract IERC20[]",name:"customConnectors",type:"address[]"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRateToEthWithCustomConnectors",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"bool",name:"useSrcWrappers",type:"bool"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRateToEthWithThreshold",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"bool",name:"useWrappers",type:"bool"},{internalType:"contract IERC20[]",name:"customConnectors",type:"address[]"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRateWithCustomConnectors",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"bool",name:"useWrappers",type:"bool"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRateWithThreshold",outputs:[{internalType:"uint256",name:"weightedRate",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"bool",name:"useSrcWrappers",type:"bool"},{internalType:"contract IERC20[]",name:"customConnectors",type:"address[]"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRatesAndWeightsToEthWithCustomConnectors",outputs:[{internalType:"uint256",name:"wrappedPrice",type:"uint256"},{components:[{internalType:"uint256",name:"maxOracleWeight",type:"uint256"},{internalType:"uint256",name:"size",type:"uint256"},{components:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"weight",type:"uint256"}],internalType:"struct OraclePrices.OraclePrice[]",name:"oraclePrices",type:"tuple[]"}],internalType:"struct OraclePrices.Data",name:"ratesAndWeights",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"srcToken",type:"address"},{internalType:"contract IERC20",name:"dstToken",type:"address"},{internalType:"bool",name:"useWrappers",type:"bool"},{internalType:"contract IERC20[]",name:"customConnectors",type:"address[]"},{internalType:"uint256",name:"thresholdFilter",type:"uint256"}],name:"getRatesAndWeightsWithCustomConnectors",outputs:[{internalType:"uint256",name:"wrappedPrice",type:"uint256"},{components:[{internalType:"uint256",name:"maxOracleWeight",type:"uint256"},{internalType:"uint256",name:"size",type:"uint256"},{components:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"weight",type:"uint256"}],internalType:"struct OraclePrices.OraclePrice[]",name:"oraclePrices",type:"tuple[]"}],internalType:"struct OraclePrices.Data",name:"ratesAndWeights",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"multiWrapper",outputs:[{internalType:"contract MultiWrapper",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"oracles",outputs:[{internalType:"contract IOracle[]",name:"allOracles",type:"address[]"},{internalType:"enum OffchainOracle.OracleType[]",name:"oracleTypes",type:"uint8[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"connector",type:"address"}],name:"removeConnector",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IOracle",name:"oracle",type:"address"},{internalType:"enum OffchainOracle.OracleType",name:"oracleKind",type:"uint8"}],name:"removeOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract MultiWrapper",name:"_multiWrapper",type:"address"}],name:"setMultiWrapper",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"}];class f{static abi=h;static createInterface(){return new t.Interface(h)}static connect(e,n){return new t.Contract(e,h,n)}}const g=[{inputs:[],name:"DECIMALS",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseFeeScalar",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"blobBaseFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"blobBaseFeeScalar",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"gasPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_data",type:"bytes"}],name:"getL1Fee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_unsignedTxSize",type:"uint256"}],name:"getL1FeeUpperBound",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes",name:"_data",type:"bytes"}],name:"getL1GasUsed",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"isEcotone",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"isFjord",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"l1BaseFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"overhead",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"scalar",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"setEcotone",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"setFjord",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class w{static abi=g;static createInterface(){return new t.Interface(g)}static connect(e,n){return new t.Contract(e,g,n)}}const v=[{inputs:[{internalType:"uint256",name:"deadline",type:"uint256"}],name:"AllowanceExpired",type:"error"},{inputs:[],name:"ExcessiveInvalidation",type:"error"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"InsufficientAllowance",type:"error"},{inputs:[{internalType:"uint256",name:"maxAmount",type:"uint256"}],name:"InvalidAmount",type:"error"},{inputs:[],name:"InvalidContractSignature",type:"error"},{inputs:[],name:"InvalidNonce",type:"error"},{inputs:[],name:"InvalidSignature",type:"error"},{inputs:[],name:"InvalidSignatureLength",type:"error"},{inputs:[],name:"InvalidSigner",type:"error"},{inputs:[],name:"LengthMismatch",type:"error"},{inputs:[{internalType:"uint256",name:"signatureDeadline",type:"uint256"}],name:"SignatureExpired",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint160",name:"amount",type:"uint160"},{indexed:!1,internalType:"uint48",name:"expiration",type:"uint48"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"address",name:"token",type:"address"},{indexed:!1,internalType:"address",name:"spender",type:"address"}],name:"Lockdown",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint48",name:"newNonce",type:"uint48"},{indexed:!1,internalType:"uint48",name:"oldNonce",type:"uint48"}],name:"NonceInvalidation",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint160",name:"amount",type:"uint160"},{indexed:!1,internalType:"uint48",name:"expiration",type:"uint48"},{indexed:!1,internalType:"uint48",name:"nonce",type:"uint48"}],name:"Permit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!1,internalType:"uint256",name:"word",type:"uint256"},{indexed:!1,internalType:"uint256",name:"mask",type:"uint256"}],name:"UnorderedNonceInvalidation",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowance",outputs:[{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint48",name:"newNonce",type:"uint48"}],name:"invalidateNonces",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"wordPos",type:"uint256"},{internalType:"uint256",name:"mask",type:"uint256"}],name:"invalidateUnorderedNonces",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"address",name:"spender",type:"address"}],internalType:"struct IAllowanceTransfer.TokenSpenderPair[]",name:"approvals",type:"tuple[]"}],name:"lockdown",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"nonceBitmap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],internalType:"struct IAllowanceTransfer.PermitDetails[]",name:"details",type:"tuple[]"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"sigDeadline",type:"uint256"}],internalType:"struct IAllowanceTransfer.PermitBatch",name:"permitBatch",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"uint48",name:"expiration",type:"uint48"},{internalType:"uint48",name:"nonce",type:"uint48"}],internalType:"struct IAllowanceTransfer.PermitDetails",name:"details",type:"tuple"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"sigDeadline",type:"uint256"}],internalType:"struct IAllowanceTransfer.PermitSingle",name:"permitSingle",type:"tuple"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions",name:"permitted",type:"tuple"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails",name:"transferDetails",type:"tuple"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions[]",name:"permitted",type:"tuple[]"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitBatchTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails[]",name:"transferDetails",type:"tuple[]"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions",name:"permitted",type:"tuple"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails",name:"transferDetails",type:"tuple"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"witness",type:"bytes32"},{internalType:"string",name:"witnessTypeString",type:"string"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitWitnessTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{components:[{internalType:"address",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct ISignatureTransfer.TokenPermissions[]",name:"permitted",type:"tuple[]"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],internalType:"struct ISignatureTransfer.PermitBatchTransferFrom",name:"permit",type:"tuple"},{components:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"requestedAmount",type:"uint256"}],internalType:"struct ISignatureTransfer.SignatureTransferDetails[]",name:"transferDetails",type:"tuple[]"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"witness",type:"bytes32"},{internalType:"string",name:"witnessTypeString",type:"string"},{internalType:"bytes",name:"signature",type:"bytes"}],name:"permitWitnessTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"address",name:"token",type:"address"}],internalType:"struct IAllowanceTransfer.AllowanceTransferDetails[]",name:"transferDetails",type:"tuple[]"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint160",name:"amount",type:"uint160"},{internalType:"address",name:"token",type:"address"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"}];class C{static abi=v;static createInterface(){return new t.Interface(v)}static connect(e,n){return new t.Contract(e,v,n)}}const A=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"guy",type:"address"},{name:"wad",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"src",type:"address"},{name:"dst",type:"address"},{name:"wad",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[{name:"wad",type:"uint256"}],name:"withdraw",outputs:[],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"",type:"address"}],name:"balanceOf",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"dst",type:"address"},{name:"wad",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!1,inputs:[],name:"deposit",outputs:[],payable:!0,stateMutability:"payable",type:"function"},{constant:!0,inputs:[{name:"",type:"address"},{name:"",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"src",type:"address"},{indexed:!0,name:"guy",type:"address"},{indexed:!1,name:"wad",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"src",type:"address"},{indexed:!0,name:"dst",type:"address"},{indexed:!1,name:"wad",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"dst",type:"address"},{indexed:!1,name:"wad",type:"uint256"}],name:"Deposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"src",type:"address"},{indexed:!1,name:"wad",type:"uint256"}],name:"Withdrawal",type:"event"}];class P{static abi=A;static createInterface(){return new t.Interface(A)}static connect(e,n){return new t.Contract(e,A,n)}}var x=Object.freeze({__proto__:null,CreateX__factory:y,DataFeed__factory:c,ERC20__factory:m,Multicall__factory:b,OffchainOracle__factory:f,OpGasPriceOracle__factory:w,Permit2__factory:C,WETH__factory:P});BigInt.prototype.toJSON||(BigInt.prototype.toJSON=function(){return this.toString()});function M(e,t=5,n=1e3){if(e<1)throw new Error("ratePerSecond must be >= 1");if(t<1)throw new Error("maxBatch must be >= 1");const a=e*((n>1e3?n:1e3)/1e3),r=Math.min(t,Math.floor(a)),i=Math.max(r,1);return{concurrency:Math.max(1,Math.floor(a/i)),batchSize:i,delays:n}}function I(e,t,n=1e3,a=!1){const r=[];if(t-e>n)for(let a=e;a<t+1;a+=n){const e=a+n-1>t?t:a+n-1;r.push({fromBlock:a,toBlock:e})}else{if(!(t-e>=0))throw new Error(`Invalid block range ${e}~${t}`);r.push({fromBlock:e,toBlock:t})}return a&&r.reverse(),r}function k(e,t,n=1){return Array(Math.ceil((t-e)/n)+1).fill(e).map((e,t)=>e+t*n)}function S(e,t){return[...Array(Math.ceil(e.length/t))].map((n,a)=>e.slice(t*a,t+t*a))}function B(e){return new Promise(t=>setTimeout(t,e))}const F=globalThis.crypto;async function E(e,t="SHA-256"){return new Uint8Array(await F.subtle.digest(t,e))}function R(e){let t="bigint"==typeof e?e.toString(16):e;return t.startsWith("0x")&&(t=t.slice(2)),t.length%2!=0&&(t="0"+t),Uint8Array.from(t.match(/.{1,2}/g).map(e=>parseInt(e,16)))}function D(e){return"0x"+Array.from(e).map(e=>e.toString(16).padStart(2,"0")).join("")}function N(e){return Uint8Array.from(atob(e),e=>e.charCodeAt(0))}function _(e){return btoa(e.reduce((e,t)=>e+String.fromCharCode(t),""))}function O(e){return e&&"object"==typeof e&&"getTopicFilter"in e&&"function"==typeof e.getTopicFilter&&e.fragment}async function G(e,n){let a,r=null;if(Array.isArray(n)){const r=function(n){if(t.isHexString(n,32))return n;const a=e.getEvent(n);return t.assertArgument(a,"unknown fragment","name",n),a.topicHash};a=n.map(e=>null==e?null:Array.isArray(e)?e.map(r):r(e))}else"*"===n?a=[null]:"string"==typeof n?t.isHexString(n,32)?a=[n]:(r=e.getEvent(n),t.assertArgument(r,"unknown fragment","event",n),a=[r.topicHash]):O(n)?a=await n.getTopicFilter():"fragment"in n?(r=n.fragment,a=[r.topicHash]):t.assertArgument(!1,"unknown event name","event",n);a=a.map(e=>{if(null==e)return null;if(Array.isArray(e)){const t=Array.from(new Set(e.map(e=>e.toLowerCase())).values());return 1===t.length?t[0]:(t.sort(),t)}return e.toLowerCase()});return{fragment:r,tag:a.map(e=>null==e?"null":Array.isArray(e)?e.join("|"):e).join("&"),topics:a}}async function L({address:e,provider:n,contract:a,event:r,fromBlock:i,toBlock:s}){!e&&a?e=a.target:"*"===e&&(e=void 0),!n&&a&&(n=a.runner?.provider||a.runner),r||(r="*"),i||0===i||(i=0),s||0===s||(s="latest");let o=null,p=[null];a&&({fragment:o,topics:p}=await G(a.interface,r));const u={address:e,topics:p,fromBlock:i,toBlock:s};return t.assert(n,"contract runner does not have a provider","UNSUPPORTED_OPERATION",{operation:"queryFilter"}),(await n.getLogs(u)).map(e=>{let r=o;if(null==r&&a)try{r=a.interface.getEvent(e.topics[0])}catch{}if(r&&a)try{return new t.EventLog(e,a.interface,r)}catch(n){return new t.UndecodedEventLog(e,n)}return new t.Log(e,n)})}async function H(e,t,n){const a=e,r=n||await e.getNetwork(),i=t?a._getBlockTag(t):"latest",s=await a.send("eth_getBlockReceipts",[i]);if(!s)throw new Error(`No block receipts for ${t}`);return s.map(e=>a._wrapTransactionReceipt(e,r))}function W(e,n,a){return{from:e.from?t.getAddress(e.from):"",gas:Number(e.gas||0),gasUsed:Number(e.gasUsed||0),to:e.to?t.getAddress(e.to):"",input:e.input,output:e.output,calls:e.calls,value:BigInt(e.value||0),type:e.type,blockNumber:a.number,blockHash:a.hash||void 0,txHash:n}}async function U(e,t,n=!1){const a=t?e._getBlockTag(t):"latest",r=66===a.length?"debug_traceBlockByHash":"debug_traceBlockByNumber",[i,s]=await Promise.all(["number"==typeof t?{number:t,hash:void 0}:e.getBlock(a),e.send(r,[a,{tracer:"callTracer",traceConfig:{onlyTopCall:n}}])]);if(!i)throw new Error(`Invalid block for ${t}`);if(!s)throw new Error(`No trace results for block ${t}`);return s.map(({txHash:e,result:t})=>W(t,e,i))}async function q(e,t,n=!1,a){const[r,i]=await Promise.all([a||e.getTransaction(t),e.send("debug_traceTransaction",[t,{tracer:"callTracer",traceConfig:{onlyTopCall:n}}])]);if(!r)throw new Error(`Invalid tx for ${r}`);if(!i)throw new Error(`No trace results for tx ${t}`);return W(i,t,{number:r.blockNumber,hash:r.blockHash})}async function $(e,n,a,r){const i=e;return i.send("eth_getStorageAt",[n,t.toQuantity(a),r?i._getBlockTag(r):"latest"])}async function j(e={},t,n,a){const r=e.concurrencySize||10,i=e.batchSize||10,s=e.retryMax||2,o=e.retryOn||500;let p=0;const u=[];for(const y of S(n,r*i)){const r=Date.now(),l=(await Promise.all(S(y,i).map(async(e,t)=>(await B(40*t),(async()=>{let t,n=0;for(;n<=s;)try{return await Promise.all(e.map(e=>a(e)))}catch(e){n++,t=e,await B(o)}throw t})())))).flat();u.push(...l),p+=y.length,e.onProgress&&e.onProgress({type:t,chunkIndex:p,chunkLength:n.length,chunks:y,chunksResult:l,resultLength:l.flat().length}),e.delays&&Date.now()-r<e.delays&&await B(e.delays-(Date.now()-r))}return u}const z="0xcA11bde05977b3631167028862bE2a173976CA11";function V(e,t,n){let a=Number(e.oldestBlock??0),r=0;const i=[];for(;a<Number(e.oldestBlock??0)+t;)i.push({number:a,gasUsedRatio:Number(e.gasUsedRatio?.[r]??0),baseFeePerGas:BigInt(e.baseFeePerGas?.[r]??0),priorityFeePerGas:e.reward?.[r]?.map(e=>BigInt(e))||[]}),a++,r++;n&&i.push({number:"pending",gasUsedRatio:NaN,baseFeePerGas:BigInt(e.baseFeePerGas?.[t]??0),priorityFeePerGas:[]});const{baseFeePerGasAvg:s,priorityFeePerGasAvg:o}=i.reduce((e,t,n)=>(e.baseFeePerGasAvg+=t.baseFeePerGas,t.priorityFeePerGas.forEach((t,n)=>{e.priorityFeePerGasAvg[n]||(e.priorityFeePerGasAvg[n]=0n),t&&(e.priorityFeePerGasAvg[n]+=t)}),i.length===n+1&&(e.baseFeePerGasAvg=e.baseFeePerGasAvg/BigInt(i.length),e.priorityFeePerGasAvg=e.priorityFeePerGasAvg.map(e=>e?e/BigInt(i.length):0n)),e),{baseFeePerGasAvg:0n,priorityFeePerGasAvg:[]});return{blocks:i,baseFeePerGasAvg:s,priorityFeePerGasAvg:o}}function Q(e){return null==e?null:e.toString()}class X extends t.FeeData{maxPriorityFeePerGasSlow;maxPriorityFeePerGasMedium;constructor(e,n,a,r,i){super(e,n,a),t.defineProperties(this,{gasPrice:"bigint"==typeof e?e:null,maxFeePerGas:"bigint"==typeof n?n:null,maxPriorityFeePerGas:"bigint"==typeof a?a:null,maxPriorityFeePerGasSlow:"bigint"==typeof r?r:null,maxPriorityFeePerGasMedium:"bigint"==typeof i?i:null})}toJSON(){return{_type:"FeeData",gasPrice:Q(this.gasPrice),maxFeePerGas:Q(this.maxFeePerGas),maxPriorityFeePerGas:Q(this.maxPriorityFeePerGas),maxPriorityFeePerGasSlow:Q(this.maxPriorityFeePerGasSlow),maxPriorityFeePerGasMedium:Q(this.maxPriorityFeePerGasMedium)}}}class K extends t.JsonRpcProvider{hardhatProvider;staticNetwork;#t;ensResolver;feeHistory;multicall;multicallAllowFailure;multicallMaxCount;multicallStallTime;multicallQueue;multicallTimer;constructor(e,a,r){const i=r?.multicallStallTime??30,s=i+(r?.batchStallTime??10),o="string"==typeof e?new t.FetchRequest(e):e;o&&(o.getUrlFunc=function(e){return async(n,a)=>{let r;try{const i={...e||{},method:n.method||"POST",headers:n.headers,body:n.body},s=e?.timeout||n.timeout;if(s){const e=new AbortController;i.signal=e.signal,r=setTimeout(()=>{e.abort()},s),a&&(t.assert(null===a||!a.cancelled,"request cancelled before sending","CANCELLED"),a.addListener(()=>{e.abort()}))}const o=await fetch(n.url,i),p={};o.headers.forEach((e,t)=>{p[t.toLowerCase()]=e});const u=await o.arrayBuffer(),y=u?new Uint8Array(u):null;return{statusCode:o.status,statusMessage:o.statusText,headers:p,body:y}}finally{clearTimeout(r)}}}(r?.fetchOptions)),super(o,a,{...r||{},batchStallTime:s}),this.hardhatProvider=r?.hardhatProvider,this.feeHistory=r?.feeHistory??!1,this.staticNetwork=(async()=>{if(a)return t.Network.from(a);if(r?.hardhatProvider)return t.Network.from(await r.hardhatProvider.getNetwork());const e=t.Network.from(await new t.JsonRpcProvider(o).getNetwork());if(r?.chainId&&BigInt(e.chainId)!==BigInt(r.chainId))throw new Error("Wrong network");return this.#t=e,e})(),this.ensResolver=this.staticNetwork.then(({chainId:e})=>{const t=n[Number(e)]||"ENS";if(r?.ensResolver)return r.ensResolver;if("ENS"===t)return p;throw new Error("Unsupported ENS type")}),this.multicall=b.connect(r?.multicall||z,this),this.multicallAllowFailure=r?.multicallAllowFailure??!0,this.multicallMaxCount=r?.multicallMaxCount??1e3,this.multicallStallTime=i,this.multicallQueue=[],this.multicallTimer=null}get _network(){return t.assert(this.#t,"network is not available yet","NETWORK_ERROR"),this.#t}async _detectNetwork(){try{return await this.staticNetwork}catch(e){throw super.destroyed||super.destroy(),e}}async getFeeData(){const[e,t,n,[a,r]]=await Promise.all([(async()=>{try{return BigInt(await this.send("eth_gasPrice",[]))}catch{return 0n}})(),(async()=>{const e=await this.getBlock("latest");return e?.baseFeePerGas??null})(),(async()=>{try{return BigInt(await this.send("eth_maxPriorityFeePerGas",[]))}catch{return 0n}})(),(async()=>{try{if(!this.feeHistory)return[null,null];const e=10,{priorityFeePerGasAvg:t}=V(await this.send("eth_feeHistory",[e,"pending",[10,25]]),e);return[t[0],t[1]]}catch{return[null,null]}})()]);return new X(e,t,n,a,r)}async getResolver(e){return(await this.ensResolver).fromName(this,e)}async lookupAddress(e,t){return(await this.ensResolver).lookupAddress(this,e,t)}async wait(e){try{if(!e)return null;const t=e?.hash||e;return await this.waitForTransaction(t,1,6e4)}catch{return null}}async hasCode(e){const t=await this.getCode(e);return!(!t||"0x"===t)}async getBlockReceipts(e){return H(this,e,this.#t)}async traceBlock(e,t){return U(this,e,t)}async traceTransaction(e,t){return q(this,e,t)}async _drainCalls(){try{(await Promise.all(S(this.multicallQueue,this.multicallMaxCount).map(async(e,t)=>(await B(40*t),await this.multicall.aggregate3.staticCall(e.map(({request:{to:e,data:t}})=>({target:e,callData:t,allowFailure:this.multicallAllowFailure}))))))).flat().forEach(([e,t],n)=>{this.multicallQueue[n].resolve({status:e,data:t}),this.multicallQueue[n].resolved=!0})}catch(e){this.multicallQueue.forEach(t=>{t.reject(e),t.resolved=!0})}this.multicallQueue=this.multicallQueue.filter(({resolved:e})=>!e),this.multicallQueue.length?this._drainCalls():this.multicallTimer=null}_queueCall(e,t="0x"){return this.multicallTimer||(this.multicallTimer=setTimeout(()=>{this._drainCalls()},this.multicallStallTime)),new Promise((n,a)=>{this.multicallQueue.push({request:{to:e,data:t},resolve:n,reject:a,resolved:!1})})}async _perform(e){if("call"===e.method&&this.multicallMaxCount>0){const{from:n,to:a,value:r,data:i,blockTag:s}=e.transaction,o=a===this.multicall.target&&i?.startsWith("0x82ad56cb");if(!n&&a&&!r&&(!s||"latest"===s)&&!o){const{status:e,data:n}=await this._queueCall(a,i);if(e)return n;throw t.AbiCoder.getBuiltinCallException("call",{to:a,data:i},n)}}return super._perform(e)}async send(e,t){return this.hardhatProvider?this.hardhatProvider.send(e,t):super.send(e,t)}}async function J(e,n){const{unsignedSerialized:a}=t.Transaction.from({chainId:n?.chainId||10000n,data:n?.data||"0x",gasLimit:n?.gasLimit||1e7,gasPrice:n?.gasPrice||t.parseUnits("10000","gwei"),nonce:n?.nonce||1e5,to:n?.to instanceof Promise?await(n?.to):n?.to||t.ZeroAddress,type:n?.type||0,value:n?.value||t.parseEther("10000")});return 13n*await e.getL1Fee(a)/10n}const Z=5000000n,Y=500000n,ee=2000000n;async function te(e,n={}){const a=e.appProvider||e.provider,r=a.multicall&&Boolean(a.multicallMaxCount),i=e.address||await e.getAddress(),s=await(e.gasPriceBump?.())||2,o=await(e.gasLimitBump?.())||1.3,p=await(e.customPriorityFee?.());if(n.from){if(n.from!==i)throw new Error("Wrong signer for transaction")}else n.from=i;const[u,y,l,c,d]=await Promise.all([n.chainId?void 0:a.getNetwork().then(({chainId:e})=>e),"bigint"==typeof n.maxFeePerGas||"bigint"==typeof n.gasPrice?void 0:a.getFeeData(),"number"==typeof n.nonce?void 0:a.getTransactionCount(i,"pending"),"bigint"!=typeof n.txCost&&e.autoValue&&r?a.multicall.getEthBalance(i):void 0,n.l1Fee||!e.opGasPriceOracle?0n:J(e.opGasPriceOracle,n)]);"bigint"==typeof u&&(n.chainId=u);let m=0n;if(y)if(y.maxFeePerGas){n.type||(n.type=2);const e="bigint"==typeof n.maxPriorityFeePerGas?n.maxPriorityFeePerGas:p??(y.maxPriorityFeePerGas||0n),t=y.maxFeePerGas<=e?e+10n:y.maxFeePerGas;n.maxFeePerGas=BigInt(Math.floor(Number(t)*s)),n.maxPriorityFeePerGas=e,delete n.gasPrice,m=n.maxFeePerGas+n.maxPriorityFeePerGas}else"bigint"==typeof y.gasPrice&&(n.type||0===n.type||(n.type=0),n.gasPrice=y.gasPrice,delete n.maxFeePerGas,delete n.maxPriorityFeePerGas,m=n.gasPrice);else m=n.maxFeePerGas?BigInt(n.maxFeePerGas)+BigInt(n.maxPriorityFeePerGas||0n):BigInt(n.gasPrice||0n);if(31337n===u&&e.isHardhat||"number"!=typeof l||(n.nonce=l),c&&BigInt(n.value||0)>=c){42161n===n.chainId?n.value=c-(m*Z+d):n.value=c-(m*Y+d);const e=await a.estimateGas(n);n.gasLimit=21000n!==e?BigInt(Math.floor(Number(e)*o)):e,n.value=c-(m*n.gasLimit+d)}if(!n.gasLimit)try{const e=await a.estimateGas(n);n.gasLimit=21000n!==e?BigInt(Math.floor(Number(e)*o)):e}catch(t){if(!e.gasLimitFailover)throw t;n.gasLimit=ee}return d&&(n.l1Fee=d),n.txCost||(n.txCost=m*BigInt(n.gasLimit)+d),t.resolveProperties(n)}class ne{parentSigner;#n;isHardhat;appProvider;opGasPriceOracle;autoValue;gasPriceBump;gasLimitBump;customPriorityFee;gasLimitFailover;constructor(e,t){this.parentSigner=e,this.appProvider=t?.appProvider,this.opGasPriceOracle=t?.opGasPriceOracle?w.connect(t.opGasPriceOracle,this.appProvider||this.provider):void 0,t?.wrapProvider&&e.provider&&(this.#n=new K(void 0,void 0,{...t?.wrapProviderOptions||{},hardhatProvider:e.provider}),this.isHardhat="hardhat"===e.provider._networkName),this.autoValue=t?.autoValue||!1,this.gasPriceBump=t?.gasPriceBump,this.gasLimitBump=t?.gasLimitBump,this.customPriorityFee=t?.customPriorityFee,this.gasLimitFailover=t?.gasLimitFailover??!1}get address(){return this.parentSigner.address}get provider(){return this.#n||this.parentSigner.provider}static fromSigners(e,t){return e.map(e=>new ne(e,t))}static fromAddress(e,n,a){return new ne(new t.VoidSigner(e,n),a)}static fromPrivateKey(e,n,a){return new ne(new t.Wallet(e,n),a)}static fromMnemonic(e,n,a=0,r){const i=`m/44'/60'/0'/0/${a}`,{privateKey:s}=t.HDNodeWallet.fromPhrase(e,void 0,i);return ne.fromPrivateKey(s,n,r)}async populateTransaction(e){return await te(this,e)}async sendTransaction(e){const t=await te(this,e),n=await this.parentSigner.sendTransaction(t);return t.txCost&&(n.txCost=t.txCost),t.l1Fee&&(n.l1Fee=t.l1Fee),n}async sendUncheckedTransaction(e){return this.parentSigner.sendUncheckedTransaction(await te(this,e))}async unlock(e){return this.provider.send("personal_unlockAccount",[this.address.toLowerCase(),e,null])}async _legacySignMessage(e){throw new Error("Unimplemented for security reasons")}getAddress(){return this.parentSigner.getAddress()}connect(e){const t=this.parentSigner.connect(e);return new ne(t)}getNonce(e){return this.parentSigner.getNonce(e)}populateCall(e){return this.parentSigner.populateCall(e)}estimateGas(e){return this.parentSigner.estimateGas(e)}call(e){return this.#n?this.#n.call(e):this.parentSigner.call(e)}resolveName(e){return this.#n?this.#n.resolveName(e):this.parentSigner.resolveName(e)}signTransaction(e){return this.parentSigner.signTransaction(e)}signMessage(e){return this.parentSigner.signMessage(e)}signTypedData(e,t,n){return this.parentSigner.signTypedData(e,t,n)}populateAuthorization(e){return this.parentSigner.populateAuthorization(e)}authorize(e){return this.parentSigner.authorize(e)}}async function ae(e,n,a){try{await n.request({method:"wallet_switchEthereumChain",params:[{chainId:t.toQuantity(e)}]})}catch(r){if(4902!==r.code&&!n.isTrust)throw r;await n.request({method:"wallet_addEthereumChain",params:[{chainId:t.toQuantity(e),chainName:a?.chainName||"Ethereum",nativeCurrency:{name:a?.chainName||"Ethereum",symbol:a?.chainSymbol||"ETH",decimals:18},rpcUrls:a?.rpcUrl?[a.rpcUrl]:[],blockExplorerUrls:[a?.explorerUrl||"https://etherscan.io"]}]})}}class re extends t.BrowserProvider{ethereum;appProvider;options;chainChanged;accountsChanged;disconnect;constructor(e,t,n){super(e,t?._network,n),this.ethereum=e,this.appProvider=t,this.options=n,this.chainChanged=n?.chainChanged,this.accountsChanged=n?.accountsChanged,this.disconnect=n?.disconnect}async getSigner(e){const[{address:n},a]=await Promise.all([super.getSigner(e),super.send("eth_chainId",[]).then(e=>BigInt(e))]),r=this.appProvider?._network.chainId;return r&&a!==r&&await ae(r,this.ethereum,this.options),this.chainChanged&&this.ethereum.on("chainChanged",this.chainChanged),this.accountsChanged&&this.ethereum.on("accountsChanged",this.accountsChanged),this.disconnect&&this.ethereum.on("disconnect",this.disconnect),new ne(new t.JsonRpcSigner(this,n),{...this.options,appProvider:this.options?.appProvider||this.appProvider})}static discoverProviders(e,t){return new Promise(n=>{const a=[],r=e=>{a.push(e.detail)};setTimeout(()=>{const i=a.map(({info:n,provider:a})=>new re(a,e,{...t,providerInfo:n}));window?.removeEventListener("eip6963:announceProvider",r),n(i)},300),window?.addEventListener("eip6963:announceProvider",r),window?.dispatchEvent(new Event("eip6963:requestProvider"))})}}async function ie(e,t,n="usd"){const a=!t.startsWith("0x");let r=t;if(a){const a=`${(t.startsWith("W")?t.replace("W",""):t).toLowerCase()}-${n}.data.eth`,i=await e.resolveName(a);if(!i)throw new Error(`Unknown address for ${a}`);r=i}return c.connect(r,e)}e.ARB_CHAIN=42161n,e.ARB_GAS_LIMIT=Z,e.BrowserProvider=re,e.CreateX__factory=y,e.DEFAULT_GAS_LIMIT=Y,e.DEFAULT_GAS_LIMIT_BUMP=1.3,e.DEFAULT_GAS_PRICE_BUMP=2,e.DataFeed__factory=c,e.ERC20__factory=m,e.EnsResolver=p,e.EthersBatcher=class{ratePerSecond;eventRange;concurrencySize;batchSize;delays;reverse;retryMax;retryOn;onProgress;constructor({ratePerSecond:e,eventRange:t,concurrencySize:n,batchSize:a,delays:r,reverse:i,retryMax:s,retryOn:o,onProgress:p}={}){this.ratePerSecond=e||10,this.eventRange=t||5e3;const{concurrency:u,batchSize:y,delays:l}=M(this.ratePerSecond,a,r);this.concurrencySize=n||u,this.batchSize=y,this.delays=l,this.reverse=i??!1,this.retryMax=s||2,this.retryOn=o||500,this.onProgress=p}async createBatchRequest(e,t,n){return j(this,e,t,n)}async getBlocks(e,t,n){return await this.createBatchRequest("Blocks",t,async t=>{const a=await e.getBlock(t,n);if(!a)throw new Error(`No block for ${t}`);return a})}async getTransactions(e,t){return await this.createBatchRequest("Transactions",t,async t=>{const n=await e.getTransaction(t);if(!n)throw new Error(`No tx for ${t}`);return n})}async getTransactionReceipts(e,t){return await this.createBatchRequest("TransactionReceipts",t,async t=>{const n=await e.getTransactionReceipt(t);if(!n)throw new Error(`No tx for ${t}`);return n})}async getBlockReceipts(e,t){const n=await e.getNetwork();return(await this.createBatchRequest("BlockReceipts",t,async t=>H(e,t,n))).flat()}async traceBlock(e,t,n){return(await this.createBatchRequest("InternalTransactions",t,async t=>U(e,t,n))).flat()}async traceTransaction(e,t,n){return await this.createBatchRequest("InternalTransactions",t,async t=>q(e,t,n))}async getEvents({address:e,provider:t,contract:n,event:a="*",fromBlock:r=0,toBlock:i}){i||(i=await(t||n?.runner?.provider||n?.runner).getBlockNumber());const s=I(r,i,this.eventRange,this.reverse);return(await this.createBatchRequest("Events",s,async({fromBlock:r,toBlock:i})=>e||!n?await L({address:e,provider:t,contract:n,event:a,fromBlock:r,toBlock:i}):await n.queryFilter(a,r,i))).flat()}async getStorageAt(e,t,n,a){return await this.createBatchRequest("Storages",n,async n=>$(e,t,n,a))}async findStorageKey(e,t,n,a,r=0,i=30){const s=I(r,i,this.batchSize*this.concurrencySize,this.reverse);for(const{fromBlock:r,toBlock:i}of s){const s=k(r,i),o=s.map(e=>n(e)),p=(await this.getStorageAt(e,t,o,a)).findIndex(e=>BigInt(e));if(p>-1)return{storageSlot:s[p],storageKey:o[p]}}}},e.FeeDataExt=X,e.GAS_LIMIT_FAILOVER=ee,e.GAS_PRICE_ORACLE_ADDRESS="0x420000000000000000000000000000000000000F",e.HARDHAT_CHAIN=31337n,e.IndexedDB=class{name;version;options;db;constructor({name:e,version:t=1,stores:n=[]}){this.name=e,this.version=t,-1===n.findIndex(({name:e})=>"keyStore"===e)&&n.push({name:"keyStore"}),this.options={upgrade(e){Object.values(e.objectStoreNames).forEach(t=>{e.deleteObjectStore(t)}),n.forEach(({name:t,keyPath:n,indexes:a})=>{const r=e.createObjectStore(t,{keyPath:n,autoIncrement:!0});Array.isArray(a)&&a.forEach(({name:e,unique:t=!1})=>{r.createIndex(e,e,{unique:t})})})}},this.db=this.openDB()}async openDB(){try{if(!window?.idb)return void console.log("IDB library is not available!");const e=await window.idb.openDB(this.name,this.version,this.options);return e.addEventListener("onupgradeneeded",async()=>{await this.deleteDB()}),e}catch(e){if(e.message.includes("A mutation operation was attempted on a database that did not allow mutations."))return void console.log("The browser does not support IndexedDB");if(e.message.includes("less than the existing version"))return console.log(`Upgrading DB ${this.name} to ${this.version}`),void await this.deleteDB();console.log(`openDB error: ${e.message}`)}}async deleteDB(){await(window?.idb?.deleteDB(this.name)),this.db=this.openDB(),await this.db}async getItem({storeName:e,key:t}){try{const n=await this.db;if(!n)return;const a=n.transaction(e).objectStore(e);return await a.get(t)}catch(e){throw new Error(`getItem error: ${e.message}`)}}async addItem({storeName:e,key:t,data:n}){try{const a=await this.db;if(!a)return;const r=a.transaction(e,"readwrite");await r.objectStore(e).get(t)||await r.objectStore(e).add(n)}catch(e){throw new Error(`addItem error: ${e.message}`)}}async putItem({storeName:e,key:t="",data:n}){try{const a=await this.db;if(!a)return;const r=a.transaction(e,"readwrite");await r.objectStore(e).put(n,t)}catch(e){throw new Error(`putItem error: ${e.message}`)}}async deleteItem({storeName:e,key:t}){try{const n=await this.db;if(!n)return;const a=n.transaction(e,"readwrite");await a.objectStore(e).delete(t)}catch(e){throw new Error(`putItem error: ${e.message}`)}}async getAll({storeName:e}){try{const t=await this.db;if(!t)return[];const n=t.transaction(e,"readonly");return await n.objectStore(e).getAll()}catch(e){throw new Error(`getAll error: ${e.message}`)}}async clearStore({storeName:e}){try{const t=await this.db;if(!t)return;const n=t.transaction(e,"readwrite");await n.objectStore(e).clear()}catch(e){throw new Error(`clearStore error: ${e.message}`)}}async createTransactions({storeName:e,data:t}){try{const n=await this.db;if(!n)return;const a=n.transaction(e,"readwrite");await a.objectStore(e).add(t),await a.done}catch(e){throw new Error(`Method createTransactions has error: ${e.message}`)}}async createMultipleTransactions({storeName:e,data:t,index:n}){try{const a=await this.db;if(!a)return;const r=a.transaction(e,"readwrite");for(const e of t)e&&await r.store.put({...e,...n})}catch(e){throw new Error(`Method createMultipleTransactions has error: ${e.message}`)}}get(e){return this.getItem({storeName:"keyStore",key:e})}set(e,t){return this.putItem({storeName:"keyStore",key:e,data:t})}del(e){return this.deleteItem({storeName:"keyStore",key:e})}},e.MULTICALL_ADDRESS=z,e.Multicall__factory=b,e.OFFCHAIN_ORACLE_ADDRESS="0x00000000000D6FFc74A8feb35aF5827bf57f6786",e.OffchainOracle__factory=f,e.OpGasPriceOracle__factory=w,e.PHASE_OFFSET=64,e.Permit2__factory=C,e.Provider=K,e.ProxySigner=ne,e.WETH__factory=P,e.base64ToBytes=N,e.base64ToHex=function(e){return D(N(e))},e.bufferToBytes=function(e){return Uint8Array.from(e)},e.bytesToBase64=_,e.bytesToHex=D,e.chainNames=n,e.chunk=S,e.compareBlockHashes=function(e,t){e=e.sort((e,t)=>e.number-t.number);for(const n of e){const e=t.find(e=>e.number===n.number);if(e?.hash&&e.hash!==n.hash)return n.number}},e.concatBytes=function(...e){const t=e.reduce((e,t)=>e+t.length,0),n=new Uint8Array(t);return e.forEach((e,t,a)=>{const r=a.slice(0,t).reduce((e,t)=>e+t.length,0);n.set(e,r)}),n},e.createBatchRateConfig=M,e.createBatchRequest=j,e.createBlockTags=I,e.crypto=F,e.digest=E,e.digestHex=async function(e,t="SHA-256"){return D(await E(R(e),t))},e.ensRegistries=a,e.ensReverseNode=s,e.ensStaticResolvers=i,e.ensUniversalResolvers=r,e.factories=x,e.fetchBlockHashes=async function(e,t,n=80){const a=e.multicall||b.connect(z,e),r=await e.getBlockNumber();return t||(t=r),await Promise.all(k(t+1-n,t).map(async t=>{if(!(t+100<=r))try{return{number:t,hash:await a.getBlockHash(t)}}catch{}const{hash:n}=await e.getBlock(t)||{};if(!n)throw new Error(`Block hash ${t} not available`);return{number:t,hash:n}}))},e.formatCallTrace=W,e.formatFeeHistory=V,e.getAggregatorRoundId=function(e){return Number(BigInt(e)&(BigInt(1)<<BigInt(64))-BigInt(1))},e.getBlockReceipts=H,e.getChainlink=ie,e.getChainlinkPrice=async function(e,n,a){const r=await ie(e,n,a),[i,s]=await Promise.all([r.latestAnswer(),r.decimals().then(e=>Number(e))]);return Number(t.formatUnits(i,s))},e.getGasPrice=function(e){if(e.maxFeePerGas){const t=e.maxPriorityFeePerGas||0n;return(e.maxFeePerGas<=t?t+10n:e.maxFeePerGas)+t}return e.gasPrice||0n},e.getL1Fee=J,e.getProof=async function(e,t,n,a){const r=e,i="string"==typeof n?[n]:n;return r.send("eth_getProof",[t,i,a?r._getBlockTag(a):"latest"])},e.getRateToEth=async function(e,t){const n=t,[a,r]=await Promise.all([n.decimals(),e.getRateToEth(n.target,!0)]);return r*10n**a/10n**18n},e.getStorageAt=$,e.getSubInfo=G,e.hexToBase64=function(e){return _(R(e))},e.hexToBytes=R,e.isDeferred=O,e.isHex=function(e){return/^0x[0-9a-fA-F]*$/.test(e)},e.isNode=!1,e.multiQueryFilter=L,e.multicall=async function(e,t,n={}){const a=t.map(({contract:e,address:t,interface:n,name:a,params:r,allowFailure:i})=>({target:e?.target||t,callData:(e?.interface||n).encodeFunctionData(a,r),allowFailure:i??!1}));return(await e.aggregate3.staticCall(a,n)).map(([e,n],a)=>{const{contract:r,interface:i,name:s}=t[a],o=e&&"0x"!==n?(r?.interface||i).decodeFunctionResult(s,n):n;return Array.isArray(o)&&1===o.length?o[0]:o})},e.permit=async function(e,n,a=t.MaxUint256,r=t.MaxUint256){const i=e,s=n?.target||n,o=i.runner,[p,u,{chainId:y}]=await Promise.all([i.name(),i.nonces(o.address),o.provider.getNetwork()]);return t.Signature.from(await o.signTypedData({name:p,version:"1",chainId:y,verifyingContract:i.target},{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},{owner:o.address,spender:s,value:a,nonce:u,deadline:r}))},e.populateTransaction=te,e.rBytes=function(e=32){return F.getRandomValues(new Uint8Array(e))},e.range=k,e.sleep=B,e.switchChain=ae,e.toEvenHex=function(e){return e.startsWith("0x")&&(e=e.slice(2)),e.length%2!=0&&(e="0"+e),"0x"+e},e.toFixedHex=function(e,t=32){return"0x"+BigInt(e).toString(16).padStart(2*t,"0")},e.traceBlock=U,e.traceTransaction=q,e.wildcardResolvers=o});
