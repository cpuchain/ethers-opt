/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common.js";
import type {
  OpGasPriceOracleMock,
  OpGasPriceOracleMockInterface,
} from "../../contracts/OpGasPriceOracleMock.js";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_multiplier",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getL1Fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "multiplier",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b5060405161024c38038061024c833981016040819052602c916033565b608052604b565b600060208284031215604457600080fd5b5051919050565b6080516101e161006b6000396000818160400152608601526101e16000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631b3ed7221461003b57806349948e0e14610074575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200160405180910390f35b6100626100823660046100cd565b60007f000000000000000000000000000000000000000000000000000000000000000082516100b19190610186565b92915050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156100df57600080fd5b813567ffffffffffffffff8111156100f657600080fd5b8201601f8101841361010757600080fd5b803567ffffffffffffffff811115610121576101216100b7565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610150576101506100b7565b60405281815282820160200186101561016857600080fd5b81602084016020830137600091810160200191909152949350505050565b80820281158282048414176100b157634e487b7160e01b600052601160045260246000fdfea26469706673582212207e904ad432113f5e1da008b004b335eb2fed88bd4e4cbd01c968d05c0100b64f64736f6c634300081e0033";

type OpGasPriceOracleMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OpGasPriceOracleMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OpGasPriceOracleMock__factory extends ContractFactory {
  constructor(...args: OpGasPriceOracleMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _multiplier: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_multiplier, overrides || {});
  }
  override deploy(
    _multiplier: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_multiplier, overrides || {}) as Promise<
      OpGasPriceOracleMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): OpGasPriceOracleMock__factory {
    return super.connect(runner) as OpGasPriceOracleMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OpGasPriceOracleMockInterface {
    return new Interface(_abi) as OpGasPriceOracleMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OpGasPriceOracleMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as OpGasPriceOracleMock;
  }
}
