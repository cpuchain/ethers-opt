import { writeFile, readFile } from 'fs/promises';
import { glob } from 'glob';
import { task } from 'hardhat/config.js';

const importLineRegex = /^.*from\s+(['"])(\.[^'"]*?)(?<!\.[jt]s|\.json)\1.*$/gm;

task('typechain:fix', 'Fix Typechain definitions for ESM generated by Hardhat')
    .addParam('dir', 'Typechain Directory', '')
    .setAction(async (taskArgs, hre) => {
        const dir =
            taskArgs.dir ||
            (hre.config as unknown as { typechain?: { outDir?: string } })?.typechain?.outDir ||
            './typechain-types';

        console.log(`typechain:fix: scanning type files from ${dir}`);

        const files = await glob(`${dir}/**/*.ts`, { ignore: 'node_modules/**' });

        for (const file of files) {
            let context = await readFile(file, { encoding: 'utf8' });

            if (context.match(importLineRegex)) {
                console.log(`typechain:fix: fixed ${file}`);
                context = context.replace(
                    /from\s+(['"])(\.[^'"]*?)(?<!\.[jt]s|\.json)\1/g,
                    'from$1$2/index.js$1',
                );
            }

            await writeFile(file, context);
        }
    });
